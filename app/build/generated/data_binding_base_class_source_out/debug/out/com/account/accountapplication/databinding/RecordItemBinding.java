// Generated by data binding compiler. Do not edit!
package com.account.accountapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.account.accountapplication.R;
import com.account.accountapplication.data.record.model.RecordModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RecordItemBinding extends ViewDataBinding {
  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView money;

  @NonNull
  public final ImageView move;

  @NonNull
  public final ImageView typeimage;

  @NonNull
  public final TextView typeinfo;

  @NonNull
  public final TextView typename;

  @Bindable
  protected RecordModel mData;

  protected RecordItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Guideline guideline, Guideline guideline2, TextView money, ImageView move,
      ImageView typeimage, TextView typeinfo, TextView typename) {
    super(_bindingComponent, _root, _localFieldCount);
    this.guideline = guideline;
    this.guideline2 = guideline2;
    this.money = money;
    this.move = move;
    this.typeimage = typeimage;
    this.typeinfo = typeinfo;
    this.typename = typename;
  }

  public abstract void setData(@Nullable RecordModel data);

  @Nullable
  public RecordModel getData() {
    return mData;
  }

  @NonNull
  public static RecordItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.record_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RecordItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RecordItemBinding>inflateInternal(inflater, R.layout.record_item, root, attachToRoot, component);
  }

  @NonNull
  public static RecordItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.record_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RecordItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RecordItemBinding>inflateInternal(inflater, R.layout.record_item, null, false, component);
  }

  public static RecordItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RecordItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (RecordItemBinding)bind(component, view, R.layout.record_item);
  }
}
